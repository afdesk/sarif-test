{
  "version": "2.1.0",
  "$schema": "https://json.schemastore.org/sarif-2.1.0-rtm.5.json",
  "runs": [
    {
      "tool": {
        "driver": {
          "fullName": "Trivy Vulnerability Scanner",
          "informationUri": "https://github.com/aquasecurity/trivy",
          "name": "Trivy",
          "rules": [
            {
              "id": "CVE-2021-42771",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2021-42771"
              },
              "fullDescription": {
                "text": "Babel.Locale in Babel before 2.9.1 allows attackers to load arbitrary locale .dat files (containing serialized Python objects) via directory traversal, leading to code execution."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-42771",
              "help": {
                "text": "Vulnerability CVE-2021-42771\nSeverity: HIGH\nPackage: babel\nFixed Version: 2.9.1\nLink: [CVE-2021-42771](https://avd.aquasec.com/nvd/cve-2021-42771)\nBabel.Locale in Babel before 2.9.1 allows attackers to load arbitrary locale .dat files (containing serialized Python objects) via directory traversal, leading to code execution.",
                "markdown": "**Vulnerability CVE-2021-42771**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|babel|2.9.1|[CVE-2021-42771](https://avd.aquasec.com/nvd/cve-2021-42771)|\n\nBabel.Locale in Babel before 2.9.1 allows attackers to load arbitrary locale .dat files (containing serialized Python objects) via directory traversal, leading to code execution."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": 8,
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "pyup.io-42498",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "pyup.io-42498"
              },
              "fullDescription": {
                "text": "Celery 5.2.0 updates \u0026#39;kombu\u0026#39; to v5.2.1, which includes dependencies updates that resolve security issues."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "text": "Vulnerability pyup.io-42498\nSeverity: UNKNOWN\nPackage: celery\nFixed Version: 5.2.0\nLink: [pyup.io-42498]()\n",
                "markdown": "**Vulnerability pyup.io-42498**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|UNKNOWN|celery|5.2.0|[pyup.io-42498]()|\n\n"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": 0,
                "tags": [
                  "vulnerability",
                  "security",
                  "UNKNOWN"
                ]
              }
            },
            {
              "id": "CVE-2019-19844",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2019-19844"
              },
              "fullDescription": {
                "text": "Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user\u0026#39;s email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2019-19844",
              "help": {
                "text": "Vulnerability CVE-2019-19844\nSeverity: CRITICAL\nPackage: django\nFixed Version: 3.0.1, 2.2.9, 1.11.27\nLink: [CVE-2019-19844](https://avd.aquasec.com/nvd/cve-2019-19844)\nDjango before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",
                "markdown": "**Vulnerability CVE-2019-19844**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|CRITICAL|django|3.0.1, 2.2.9, 1.11.27|[CVE-2019-19844](https://avd.aquasec.com/nvd/cve-2019-19844)|\n\nDjango before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": 9,
                "tags": [
                  "vulnerability",
                  "security",
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "CVE-2020-7471",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2020-7471"
              },
              "fullDescription": {
                "text": "Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-7471",
              "help": {
                "text": "Vulnerability CVE-2020-7471\nSeverity: CRITICAL\nPackage: django\nFixed Version: 3.0.3, 2.2.10, 1.11.28\nLink: [CVE-2020-7471](https://avd.aquasec.com/nvd/cve-2020-7471)\nDjango 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.",
                "markdown": "**Vulnerability CVE-2020-7471**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|CRITICAL|django|3.0.3, 2.2.10, 1.11.28|[CVE-2020-7471](https://avd.aquasec.com/nvd/cve-2020-7471)|\n\nDjango 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": 9,
                "tags": [
                  "vulnerability",
                  "security",
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "CVE-2019-6975",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2019-6975"
              },
              "fullDescription": {
                "text": "Django 1.11.x before 1.11.19, 2.0.x before 2.0.11, and 2.1.x before 2.1.6 allows Uncontrolled Memory Consumption via a malicious attacker-supplied value to the django.utils.numberformat.format() function."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2019-6975",
              "help": {
                "text": "Vulnerability CVE-2019-6975\nSeverity: HIGH\nPackage: django\nFixed Version: 2.0.11\nLink: [CVE-2019-6975](https://avd.aquasec.com/nvd/cve-2019-6975)\nDjango 1.11.x before 1.11.19, 2.0.x before 2.0.11, and 2.1.x before 2.1.6 allows Uncontrolled Memory Consumption via a malicious attacker-supplied value to the django.utils.numberformat.format() function.",
                "markdown": "**Vulnerability CVE-2019-6975**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|django|2.0.11|[CVE-2019-6975](https://avd.aquasec.com/nvd/cve-2019-6975)|\n\nDjango 1.11.x before 1.11.19, 2.0.x before 2.0.11, and 2.1.x before 2.1.6 allows Uncontrolled Memory Consumption via a malicious attacker-supplied value to the django.utils.numberformat.format() function."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": 8,
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2020-9402",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2020-9402"
              },
              "fullDescription": {
                "text": "Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-9402",
              "help": {
                "text": "Vulnerability CVE-2020-9402\nSeverity: HIGH\nPackage: django\nFixed Version: 3.0.4, 2.2.11, 1.11.29\nLink: [CVE-2020-9402](https://avd.aquasec.com/nvd/cve-2020-9402)\nDjango 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",
                "markdown": "**Vulnerability CVE-2020-9402**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|django|3.0.4, 2.2.11, 1.11.29|[CVE-2020-9402](https://avd.aquasec.com/nvd/cve-2020-9402)|\n\nDjango 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": 8,
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-33203",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2021-33203"
              },
              "fullDescription": {
                "text": "Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-33203",
              "help": {
                "text": "Vulnerability CVE-2021-33203\nSeverity: HIGH\nPackage: django\nFixed Version: 2.2.24, 3.1.12, 3.2.4\nLink: [CVE-2021-33203](https://avd.aquasec.com/nvd/cve-2021-33203)\nDjango before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.",
                "markdown": "**Vulnerability CVE-2021-33203**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|django|2.2.24, 3.1.12, 3.2.4|[CVE-2021-33203](https://avd.aquasec.com/nvd/cve-2021-33203)|\n\nDjango before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": 8,
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-44420",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2021-44420"
              },
              "fullDescription": {
                "text": "In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-44420",
              "help": {
                "text": "Vulnerability CVE-2021-44420\nSeverity: HIGH\nPackage: django\nFixed Version: 3.2.10, 3.1.14, 2.2.25\nLink: [CVE-2021-44420](https://avd.aquasec.com/nvd/cve-2021-44420)\nIn Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.",
                "markdown": "**Vulnerability CVE-2021-44420**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|django|3.2.10, 3.1.14, 2.2.25|[CVE-2021-44420](https://avd.aquasec.com/nvd/cve-2021-44420)|\n\nIn Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": 8,
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2019-3498",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2019-3498"
              },
              "fullDescription": {
                "text": "In Django 1.11.x before 1.11.18, 2.0.x before 2.0.10, and 2.1.x before 2.1.5, an Improper Neutralization of Special Elements in Output Used by a Downstream Component issue exists in django.views.defaults.page_not_found(), leading to content spoofing (in a 404 error page) if a user fails to recognize that a crafted URL has malicious content."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2019-3498",
              "help": {
                "text": "Vulnerability CVE-2019-3498\nSeverity: MEDIUM\nPackage: django\nFixed Version: 2.1.5, 2.0.10, 1.11.18\nLink: [CVE-2019-3498](https://avd.aquasec.com/nvd/cve-2019-3498)\nIn Django 1.11.x before 1.11.18, 2.0.x before 2.0.10, and 2.1.x before 2.1.5, an Improper Neutralization of Special Elements in Output Used by a Downstream Component issue exists in django.views.defaults.page_not_found(), leading to content spoofing (in a 404 error page) if a user fails to recognize that a crafted URL has malicious content.",
                "markdown": "**Vulnerability CVE-2019-3498**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|django|2.1.5, 2.0.10, 1.11.18|[CVE-2019-3498](https://avd.aquasec.com/nvd/cve-2019-3498)|\n\nIn Django 1.11.x before 1.11.18, 2.0.x before 2.0.10, and 2.1.x before 2.1.5, an Improper Neutralization of Special Elements in Output Used by a Downstream Component issue exists in django.views.defaults.page_not_found(), leading to content spoofing (in a 404 error page) if a user fails to recognize that a crafted URL has malicious content."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": 5,
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2020-13254",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2020-13254"
              },
              "fullDescription": {
                "text": "An issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. In cases where a memcached backend does not perform key validation, passing malformed cache keys could result in a key collision, and potential data leakage."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-13254",
              "help": {
                "text": "Vulnerability CVE-2020-13254\nSeverity: MEDIUM\nPackage: django\nFixed Version: 3.0.7, 2.2.13\nLink: [CVE-2020-13254](https://avd.aquasec.com/nvd/cve-2020-13254)\nAn issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. In cases where a memcached backend does not perform key validation, passing malformed cache keys could result in a key collision, and potential data leakage.",
                "markdown": "**Vulnerability CVE-2020-13254**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|django|3.0.7, 2.2.13|[CVE-2020-13254](https://avd.aquasec.com/nvd/cve-2020-13254)|\n\nAn issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. In cases where a memcached backend does not perform key validation, passing malformed cache keys could result in a key collision, and potential data leakage."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": 5,
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2020-13596",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2020-13596"
              },
              "fullDescription": {
                "text": "An issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. Query parameters generated by the Django admin ForeignKeyRawIdWidget were not properly URL encoded, leading to a possibility of an XSS attack."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-13596",
              "help": {
                "text": "Vulnerability CVE-2020-13596\nSeverity: MEDIUM\nPackage: django\nFixed Version: 3.0.7, 2.2.13\nLink: [CVE-2020-13596](https://avd.aquasec.com/nvd/cve-2020-13596)\nAn issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. Query parameters generated by the Django admin ForeignKeyRawIdWidget were not properly URL encoded, leading to a possibility of an XSS attack.",
                "markdown": "**Vulnerability CVE-2020-13596**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|django|3.0.7, 2.2.13|[CVE-2020-13596](https://avd.aquasec.com/nvd/cve-2020-13596)|\n\nAn issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. Query parameters generated by the Django admin ForeignKeyRawIdWidget were not properly URL encoded, leading to a possibility of an XSS attack."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": 5,
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "pyup.io-37132",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "pyup.io-37132"
              },
              "fullDescription": {
                "text": "Django-cors-headers version 3.0.0 fixes a security issue where the CORS middleware would allow requests between schemes, for example from insecure \u0026#39;http://\u0026#39; origins to a secure \u0026#39;https://\u0026#39; site. Now you will need to update your whitelist to include schemes, for example from this:\r\nCORS_ORIGIN_WHITELIST = [\u0026#39;example.com\u0026#39;]\r\nto this:\r\nCORS_ORIGIN_WHITELIST = [\u0026#39;https://example.com\u0026#39;]\r\nhttps://github.com/adamchainz/django-cors-headers/issues/259"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "text": "Vulnerability pyup.io-37132\nSeverity: UNKNOWN\nPackage: django-cors-headers\nFixed Version: 3.0.0\nLink: [pyup.io-37132]()\n",
                "markdown": "**Vulnerability pyup.io-37132**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|UNKNOWN|django-cors-headers|3.0.0|[pyup.io-37132]()|\n\n"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": 0,
                "tags": [
                  "vulnerability",
                  "security",
                  "UNKNOWN"
                ]
              }
            },
            {
              "id": "pyup.io-42216",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "pyup.io-42216"
              },
              "fullDescription": {
                "text": "Django-silk version 4.0.0 masks request headers to avoid auth information leaking.\r\nhttps://github.com/jazzband/django-silk/issues/375"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "text": "Vulnerability pyup.io-42216\nSeverity: UNKNOWN\nPackage: django-silk\nFixed Version: 4.0.0\nLink: [pyup.io-42216]()\n",
                "markdown": "**Vulnerability pyup.io-42216**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|UNKNOWN|django-silk|4.0.0|[pyup.io-42216]()|\n\n"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": 0,
                "tags": [
                  "vulnerability",
                  "security",
                  "UNKNOWN"
                ]
              }
            },
            {
              "id": "CVE-2020-25626",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2020-25626"
              },
              "fullDescription": {
                "text": "A flaw was found in Django REST Framework versions before 3.12.0 and before 3.11.2. When using the browseable API viewer, Django REST Framework fails to properly escape certain strings that can come from user input. This allows a user who can control those strings to inject malicious \u0026lt;script\u0026gt; tags, leading to a cross-site-scripting (XSS) vulnerability."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-25626",
              "help": {
                "text": "Vulnerability CVE-2020-25626\nSeverity: MEDIUM\nPackage: djangorestframework\nFixed Version: 3.11.2\nLink: [CVE-2020-25626](https://avd.aquasec.com/nvd/cve-2020-25626)\nA flaw was found in Django REST Framework versions before 3.12.0 and before 3.11.2. When using the browseable API viewer, Django REST Framework fails to properly escape certain strings that can come from user input. This allows a user who can control those strings to inject malicious \u003cscript\u003e tags, leading to a cross-site-scripting (XSS) vulnerability.",
                "markdown": "**Vulnerability CVE-2020-25626**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|djangorestframework|3.11.2|[CVE-2020-25626](https://avd.aquasec.com/nvd/cve-2020-25626)|\n\nA flaw was found in Django REST Framework versions before 3.12.0 and before 3.11.2. When using the browseable API viewer, Django REST Framework fails to properly escape certain strings that can come from user input. This allows a user who can control those strings to inject malicious \u003cscript\u003e tags, leading to a cross-site-scripting (XSS) vulnerability."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": 5,
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "pyup.io-40104",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "pyup.io-40104"
              },
              "fullDescription": {
                "text": "Gunicorn 20.0.1 fixes chunked encoding support to prevent any request smuggling for security purposes."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "text": "Vulnerability pyup.io-40104\nSeverity: UNKNOWN\nPackage: gunicorn\nFixed Version: 19.10.0, 20.0.1\nLink: [pyup.io-40104]()\n",
                "markdown": "**Vulnerability pyup.io-40104**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|UNKNOWN|gunicorn|19.10.0, 20.0.1|[pyup.io-40104]()|\n\n"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": 0,
                "tags": [
                  "vulnerability",
                  "security",
                  "UNKNOWN"
                ]
              }
            },
            {
              "id": "pyup.io-40105",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "pyup.io-40105"
              },
              "fullDescription": {
                "text": "Gunicorn 19.10.0 includes a security fix to prevent HTTP desync attack."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "text": "Vulnerability pyup.io-40105\nSeverity: UNKNOWN\nPackage: gunicorn\nFixed Version: 19.10.0\nLink: [pyup.io-40105]()\n",
                "markdown": "**Vulnerability pyup.io-40105**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|UNKNOWN|gunicorn|19.10.0|[pyup.io-40105]()|\n\n"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": 0,
                "tags": [
                  "vulnerability",
                  "security",
                  "UNKNOWN"
                ]
              }
            },
            {
              "id": "CVE-2020-11078",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2020-11078"
              },
              "fullDescription": {
                "text": "In httplib2 before version 0.18.0, an attacker controlling unescaped part of uri for `httplib2.Http.request()` could change request headers and body, send additional hidden requests to same server. This vulnerability impacts software that uses httplib2 with uri constructed by string concatenation, as opposed to proper urllib building with escaping. This has been fixed in 0.18.0."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-11078",
              "help": {
                "text": "Vulnerability CVE-2020-11078\nSeverity: LOW\nPackage: httplib2\nFixed Version: 0.18.0\nLink: [CVE-2020-11078](https://avd.aquasec.com/nvd/cve-2020-11078)\nIn httplib2 before version 0.18.0, an attacker controlling unescaped part of uri for `httplib2.Http.request()` could change request headers and body, send additional hidden requests to same server. This vulnerability impacts software that uses httplib2 with uri constructed by string concatenation, as opposed to proper urllib building with escaping. This has been fixed in 0.18.0.",
                "markdown": "**Vulnerability CVE-2020-11078**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|httplib2|0.18.0|[CVE-2020-11078](https://avd.aquasec.com/nvd/cve-2020-11078)|\n\nIn httplib2 before version 0.18.0, an attacker controlling unescaped part of uri for `httplib2.Http.request()` could change request headers and body, send additional hidden requests to same server. This vulnerability impacts software that uses httplib2 with uri constructed by string concatenation, as opposed to proper urllib building with escaping. This has been fixed in 0.18.0."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": 3.5,
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2021-21240",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2021-21240"
              },
              "fullDescription": {
                "text": "httplib2 is a comprehensive HTTP client library for Python. In httplib2 before version 0.19.0, a malicious server which responds with long series of \u0026#34;\\xa0\u0026#34; characters in the \u0026#34;www-authenticate\u0026#34; header may cause Denial of Service (CPU burn while parsing header) of the httplib2 client accessing said server. This is fixed in version 0.19.0 which contains a new implementation of auth headers parsing using the pyparsing library."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-21240",
              "help": {
                "text": "Vulnerability CVE-2021-21240\nSeverity: LOW\nPackage: httplib2\nFixed Version: 0.19.0\nLink: [CVE-2021-21240](https://avd.aquasec.com/nvd/cve-2021-21240)\nhttplib2 is a comprehensive HTTP client library for Python. In httplib2 before version 0.19.0, a malicious server which responds with long series of \"\\xa0\" characters in the \"www-authenticate\" header may cause Denial of Service (CPU burn while parsing header) of the httplib2 client accessing said server. This is fixed in version 0.19.0 which contains a new implementation of auth headers parsing using the pyparsing library.",
                "markdown": "**Vulnerability CVE-2021-21240**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|httplib2|0.19.0|[CVE-2021-21240](https://avd.aquasec.com/nvd/cve-2021-21240)|\n\nhttplib2 is a comprehensive HTTP client library for Python. In httplib2 before version 0.19.0, a malicious server which responds with long series of \"\\xa0\" characters in the \"www-authenticate\" header may cause Denial of Service (CPU burn while parsing header) of the httplib2 client accessing said server. This is fixed in version 0.19.0 which contains a new implementation of auth headers parsing using the pyparsing library."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": 3.5,
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "pyup.io-38303",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "pyup.io-38303"
              },
              "fullDescription": {
                "text": "Httplib2 0.18.0 is an important security update to patch a CWE-93 CRLF injection vulnerability which forces %xx quote of space, CR, LF characters in uri. See: \u0026lt;https://cwe.mitre.org/data/definitions/93.html\u0026gt;."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "text": "Vulnerability pyup.io-38303\nSeverity: UNKNOWN\nPackage: httplib2\nFixed Version: 0.18.0\nLink: [pyup.io-38303]()\n",
                "markdown": "**Vulnerability pyup.io-38303**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|UNKNOWN|httplib2|0.18.0|[pyup.io-38303]()|\n\n"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": 0,
                "tags": [
                  "vulnerability",
                  "security",
                  "UNKNOWN"
                ]
              }
            },
            {
              "id": "CVE-2020-28493",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2020-28493"
              },
              "fullDescription": {
                "text": "This affects the package jinja2 from 0.0.0 and before 2.11.3. The ReDoS vulnerability is mainly due to the `_punctuation_re regex` operator and its use of multiple wildcards. The last wildcard is the most exploitable as it searches for trailing punctuation. This issue can be mitigated by Markdown to format user content instead of the urlize filter, or by implementing request timeouts and limiting process memory."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-28493",
              "help": {
                "text": "Vulnerability CVE-2020-28493\nSeverity: MEDIUM\nPackage: jinja2\nFixed Version: 2.11.3\nLink: [CVE-2020-28493](https://avd.aquasec.com/nvd/cve-2020-28493)\nThis affects the package jinja2 from 0.0.0 and before 2.11.3. The ReDoS vulnerability is mainly due to the `_punctuation_re regex` operator and its use of multiple wildcards. The last wildcard is the most exploitable as it searches for trailing punctuation. This issue can be mitigated by Markdown to format user content instead of the urlize filter, or by implementing request timeouts and limiting process memory.",
                "markdown": "**Vulnerability CVE-2020-28493**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|jinja2|2.11.3|[CVE-2020-28493](https://avd.aquasec.com/nvd/cve-2020-28493)|\n\nThis affects the package jinja2 from 0.0.0 and before 2.11.3. The ReDoS vulnerability is mainly due to the `_punctuation_re regex` operator and its use of multiple wildcards. The last wildcard is the most exploitable as it searches for trailing punctuation. This issue can be mitigated by Markdown to format user content instead of the urlize filter, or by implementing request timeouts and limiting process memory."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": 5,
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "pyup.io-42497",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "pyup.io-42497"
              },
              "fullDescription": {
                "text": "Kombu 5.2.1 updates dependencies to include security fixes.\r\nhttps://github.com/celery/kombu/commit/f3b04558fa0df4ecc383c93e0b3b300d95e17c47"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "text": "Vulnerability pyup.io-42497\nSeverity: UNKNOWN\nPackage: kombu\nFixed Version: 5.2.1\nLink: [pyup.io-42497]()\n",
                "markdown": "**Vulnerability pyup.io-42497**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|UNKNOWN|kombu|5.2.1|[pyup.io-42497]()|\n\n"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": 0,
                "tags": [
                  "vulnerability",
                  "security",
                  "UNKNOWN"
                ]
              }
            },
            {
              "id": "CVE-2020-29651",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2020-29651"
              },
              "fullDescription": {
                "text": "A denial of service via regular expression in the py.path.svnwc component of py (aka python-py) through 1.9.0 could be used by attackers to cause a compute-time denial of service attack by supplying malicious input to the blame functionality."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-29651",
              "help": {
                "text": "Vulnerability CVE-2020-29651\nSeverity: HIGH\nPackage: py\nFixed Version: \nLink: [CVE-2020-29651](https://avd.aquasec.com/nvd/cve-2020-29651)\nA denial of service via regular expression in the py.path.svnwc component of py (aka python-py) through 1.9.0 could be used by attackers to cause a compute-time denial of service attack by supplying malicious input to the blame functionality.",
                "markdown": "**Vulnerability CVE-2020-29651**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|py||[CVE-2020-29651](https://avd.aquasec.com/nvd/cve-2020-29651)|\n\nA denial of service via regular expression in the py.path.svnwc component of py (aka python-py) through 1.9.0 could be used by attackers to cause a compute-time denial of service attack by supplying malicious input to the blame functionality."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": 8,
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-20270",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2021-20270"
              },
              "fullDescription": {
                "text": "An infinite loop in SMLLexer in Pygments versions 1.5 to 2.7.3 may lead to denial of service when performing syntax highlighting of a Standard ML (SML) source file, as demonstrated by input that only contains the \u0026#34;exception\u0026#34; keyword."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-20270",
              "help": {
                "text": "Vulnerability CVE-2021-20270\nSeverity: HIGH\nPackage: pygments\nFixed Version: 2.7.4\nLink: [CVE-2021-20270](https://avd.aquasec.com/nvd/cve-2021-20270)\nAn infinite loop in SMLLexer in Pygments versions 1.5 to 2.7.3 may lead to denial of service when performing syntax highlighting of a Standard ML (SML) source file, as demonstrated by input that only contains the \"exception\" keyword.",
                "markdown": "**Vulnerability CVE-2021-20270**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|pygments|2.7.4|[CVE-2021-20270](https://avd.aquasec.com/nvd/cve-2021-20270)|\n\nAn infinite loop in SMLLexer in Pygments versions 1.5 to 2.7.3 may lead to denial of service when performing syntax highlighting of a Standard ML (SML) source file, as demonstrated by input that only contains the \"exception\" keyword."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": 8,
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-27291",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2021-27291"
              },
              "fullDescription": {
                "text": "In pygments 1.1+, fixed in 2.7.4, the lexers used to parse programming languages rely heavily on regular expressions. Some of the regular expressions have exponential or cubic worst-case complexity and are vulnerable to ReDoS. By crafting malicious input, an attacker can cause a denial of service."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-27291",
              "help": {
                "text": "Vulnerability CVE-2021-27291\nSeverity: MEDIUM\nPackage: pygments\nFixed Version: 2.7.4\nLink: [CVE-2021-27291](https://avd.aquasec.com/nvd/cve-2021-27291)\nIn pygments 1.1+, fixed in 2.7.4, the lexers used to parse programming languages rely heavily on regular expressions. Some of the regular expressions have exponential or cubic worst-case complexity and are vulnerable to ReDoS. By crafting malicious input, an attacker can cause a denial of service.",
                "markdown": "**Vulnerability CVE-2021-27291**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|pygments|2.7.4|[CVE-2021-27291](https://avd.aquasec.com/nvd/cve-2021-27291)|\n\nIn pygments 1.1+, fixed in 2.7.4, the lexers used to parse programming languages rely heavily on regular expressions. Some of the regular expressions have exponential or cubic worst-case complexity and are vulnerable to ReDoS. By crafting malicious input, an attacker can cause a denial of service."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": 5,
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2020-14343",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2020-14343"
              },
              "fullDescription": {
                "text": "A vulnerability was discovered in the PyYAML library in versions before 5.4, where it is susceptible to arbitrary code execution when it processes untrusted YAML files through the full_load method or with the FullLoader loader. Applications that use the library to process untrusted input may be vulnerable to this flaw. This flaw allows an attacker to execute arbitrary code on the system by abusing the python/object/new constructor. This flaw is due to an incomplete fix for CVE-2020-1747."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-14343",
              "help": {
                "text": "Vulnerability CVE-2020-14343\nSeverity: CRITICAL\nPackage: pyyaml\nFixed Version: 5.4\nLink: [CVE-2020-14343](https://avd.aquasec.com/nvd/cve-2020-14343)\nA vulnerability was discovered in the PyYAML library in versions before 5.4, where it is susceptible to arbitrary code execution when it processes untrusted YAML files through the full_load method or with the FullLoader loader. Applications that use the library to process untrusted input may be vulnerable to this flaw. This flaw allows an attacker to execute arbitrary code on the system by abusing the python/object/new constructor. This flaw is due to an incomplete fix for CVE-2020-1747.",
                "markdown": "**Vulnerability CVE-2020-14343**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|CRITICAL|pyyaml|5.4|[CVE-2020-14343](https://avd.aquasec.com/nvd/cve-2020-14343)|\n\nA vulnerability was discovered in the PyYAML library in versions before 5.4, where it is susceptible to arbitrary code execution when it processes untrusted YAML files through the full_load method or with the FullLoader loader. Applications that use the library to process untrusted input may be vulnerable to this flaw. This flaw allows an attacker to execute arbitrary code on the system by abusing the python/object/new constructor. This flaw is due to an incomplete fix for CVE-2020-1747."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": 9,
                "tags": [
                  "vulnerability",
                  "security",
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "CVE-2019-20477",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2019-20477"
              },
              "fullDescription": {
                "text": "PyYAML 5.1 through 5.1.2 has insufficient restrictions on the load and load_all functions because of a class deserialization issue, e.g., Popen is a class in the subprocess module. NOTE: this issue exists because of an incomplete fix for CVE-2017-18342."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2019-20477",
              "help": {
                "text": "Vulnerability CVE-2019-20477\nSeverity: HIGH\nPackage: pyyaml\nFixed Version: \nLink: [CVE-2019-20477](https://avd.aquasec.com/nvd/cve-2019-20477)\nPyYAML 5.1 through 5.1.2 has insufficient restrictions on the load and load_all functions because of a class deserialization issue, e.g., Popen is a class in the subprocess module. NOTE: this issue exists because of an incomplete fix for CVE-2017-18342.",
                "markdown": "**Vulnerability CVE-2019-20477**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|pyyaml||[CVE-2019-20477](https://avd.aquasec.com/nvd/cve-2019-20477)|\n\nPyYAML 5.1 through 5.1.2 has insufficient restrictions on the load and load_all functions because of a class deserialization issue, e.g., Popen is a class in the subprocess module. NOTE: this issue exists because of an incomplete fix for CVE-2017-18342."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": 8,
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2020-1747",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2020-1747"
              },
              "fullDescription": {
                "text": "A vulnerability was discovered in the PyYAML library in versions before 5.3.1, where it is susceptible to arbitrary code execution when it processes untrusted YAML files through the full_load method or with the FullLoader loader. Applications that use the library to process untrusted input may be vulnerable to this flaw. An attacker could use this flaw to execute arbitrary code on the system by abusing the python/object/new constructor."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-1747",
              "help": {
                "text": "Vulnerability CVE-2020-1747\nSeverity: HIGH\nPackage: pyyaml\nFixed Version: 5.3.1\nLink: [CVE-2020-1747](https://avd.aquasec.com/nvd/cve-2020-1747)\nA vulnerability was discovered in the PyYAML library in versions before 5.3.1, where it is susceptible to arbitrary code execution when it processes untrusted YAML files through the full_load method or with the FullLoader loader. Applications that use the library to process untrusted input may be vulnerable to this flaw. An attacker could use this flaw to execute arbitrary code on the system by abusing the python/object/new constructor.",
                "markdown": "**Vulnerability CVE-2020-1747**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|pyyaml|5.3.1|[CVE-2020-1747](https://avd.aquasec.com/nvd/cve-2020-1747)|\n\nA vulnerability was discovered in the PyYAML library in versions before 5.3.1, where it is susceptible to arbitrary code execution when it processes untrusted YAML files through the full_load method or with the FullLoader loader. Applications that use the library to process untrusted input may be vulnerable to this flaw. An attacker could use this flaw to execute arbitrary code on the system by abusing the python/object/new constructor."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": 8,
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-43572",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2021-43572"
              },
              "fullDescription": {
                "text": "The verify function in the Stark Bank Python ECDSA library (ecdsa-python) 2.0.0 fails to check that the signature is non-zero, which allows attackers to forge signatures on arbitrary messages."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-43572",
              "help": {
                "text": "Vulnerability CVE-2021-43572\nSeverity: CRITICAL\nPackage: sendgrid\nFixed Version: 6.9.1\nLink: [CVE-2021-43572](https://avd.aquasec.com/nvd/cve-2021-43572)\nThe verify function in the Stark Bank Python ECDSA library (ecdsa-python) 2.0.0 fails to check that the signature is non-zero, which allows attackers to forge signatures on arbitrary messages.",
                "markdown": "**Vulnerability CVE-2021-43572**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|CRITICAL|sendgrid|6.9.1|[CVE-2021-43572](https://avd.aquasec.com/nvd/cve-2021-43572)|\n\nThe verify function in the Stark Bank Python ECDSA library (ecdsa-python) 2.0.0 fails to check that the signature is non-zero, which allows attackers to forge signatures on arbitrary messages."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": 9,
                "tags": [
                  "vulnerability",
                  "security",
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "CVE-2019-11324",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2019-11324"
              },
              "fullDescription": {
                "text": "The urllib3 library before 1.24.2 for Python mishandles certain cases where the desired set of CA certificates is different from the OS store of CA certificates, which results in SSL connections succeeding in situations where a verification failure is the correct outcome. This is related to use of the ssl_context, ca_certs, or ca_certs_dir argument."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2019-11324",
              "help": {
                "text": "Vulnerability CVE-2019-11324\nSeverity: HIGH\nPackage: urllib3\nFixed Version: 1.24.2\nLink: [CVE-2019-11324](https://avd.aquasec.com/nvd/cve-2019-11324)\nThe urllib3 library before 1.24.2 for Python mishandles certain cases where the desired set of CA certificates is different from the OS store of CA certificates, which results in SSL connections succeeding in situations where a verification failure is the correct outcome. This is related to use of the ssl_context, ca_certs, or ca_certs_dir argument.",
                "markdown": "**Vulnerability CVE-2019-11324**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|urllib3|1.24.2|[CVE-2019-11324](https://avd.aquasec.com/nvd/cve-2019-11324)|\n\nThe urllib3 library before 1.24.2 for Python mishandles certain cases where the desired set of CA certificates is different from the OS store of CA certificates, which results in SSL connections succeeding in situations where a verification failure is the correct outcome. This is related to use of the ssl_context, ca_certs, or ca_certs_dir argument."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": 8,
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-33503",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2021-33503"
              },
              "fullDescription": {
                "text": "An issue was discovered in urllib3 before 1.26.5. When provided with a URL containing many @ characters in the authority component, the authority regular expression exhibits catastrophic backtracking, causing a denial of service if a URL were passed as a parameter or redirected to via an HTTP redirect."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-33503",
              "help": {
                "text": "Vulnerability CVE-2021-33503\nSeverity: HIGH\nPackage: urllib3\nFixed Version: 1.26.5\nLink: [CVE-2021-33503](https://avd.aquasec.com/nvd/cve-2021-33503)\nAn issue was discovered in urllib3 before 1.26.5. When provided with a URL containing many @ characters in the authority component, the authority regular expression exhibits catastrophic backtracking, causing a denial of service if a URL were passed as a parameter or redirected to via an HTTP redirect.",
                "markdown": "**Vulnerability CVE-2021-33503**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|urllib3|1.26.5|[CVE-2021-33503](https://avd.aquasec.com/nvd/cve-2021-33503)|\n\nAn issue was discovered in urllib3 before 1.26.5. When provided with a URL containing many @ characters in the authority component, the authority regular expression exhibits catastrophic backtracking, causing a denial of service if a URL were passed as a parameter or redirected to via an HTTP redirect."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": 8,
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2019-11236",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2019-11236"
              },
              "fullDescription": {
                "text": "In the urllib3 library through 1.24.1 for Python, CRLF injection is possible if the attacker controls the request parameter."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2019-11236",
              "help": {
                "text": "Vulnerability CVE-2019-11236\nSeverity: MEDIUM\nPackage: urllib3\nFixed Version: \nLink: [CVE-2019-11236](https://avd.aquasec.com/nvd/cve-2019-11236)\nIn the urllib3 library through 1.24.1 for Python, CRLF injection is possible if the attacker controls the request parameter.",
                "markdown": "**Vulnerability CVE-2019-11236**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|urllib3||[CVE-2019-11236](https://avd.aquasec.com/nvd/cve-2019-11236)|\n\nIn the urllib3 library through 1.24.1 for Python, CRLF injection is possible if the attacker controls the request parameter."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": 5,
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2020-26137",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2020-26137"
              },
              "fullDescription": {
                "text": "urllib3 before 1.25.9 allows CRLF injection if the attacker controls the HTTP request method, as demonstrated by inserting CR and LF control characters in the first argument of putrequest(). NOTE: this is similar to CVE-2020-26116."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-26137",
              "help": {
                "text": "Vulnerability CVE-2020-26137\nSeverity: MEDIUM\nPackage: urllib3\nFixed Version: 1.25.9\nLink: [CVE-2020-26137](https://avd.aquasec.com/nvd/cve-2020-26137)\nurllib3 before 1.25.9 allows CRLF injection if the attacker controls the HTTP request method, as demonstrated by inserting CR and LF control characters in the first argument of putrequest(). NOTE: this is similar to CVE-2020-26116.",
                "markdown": "**Vulnerability CVE-2020-26137**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|urllib3|1.25.9|[CVE-2020-26137](https://avd.aquasec.com/nvd/cve-2020-26137)|\n\nurllib3 before 1.25.9 allows CRLF injection if the attacker controls the HTTP request method, as demonstrated by inserting CR and LF control characters in the first argument of putrequest(). NOTE: this is similar to CVE-2020-26116."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": 5,
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            }
          ],
          "version": "dev"
        }
      },
      "results": [
        {
          "ruleId": "CVE-2021-42771",
          "ruleIndex": 0,
          "level": "error",
          "message": {
            "text": "Package: babel\nInstalled Version: 2.6.0\nVulnerability CVE-2021-42771\nSeverity: HIGH\nFixed Version: 2.9.1\nLink: [CVE-2021-42771](https://avd.aquasec.com/nvd/cve-2021-42771)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dir1/Pipfile.lock",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "pyup.io-42498",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Package: celery\nInstalled Version: 4.3.0\nVulnerability pyup.io-42498\nSeverity: UNKNOWN\nFixed Version: 5.2.0\nLink: [pyup.io-42498]()"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dir1/Pipfile.lock",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-19844",
          "ruleIndex": 2,
          "level": "error",
          "message": {
            "text": "Package: django\nInstalled Version: 2.0.9\nVulnerability CVE-2019-19844\nSeverity: CRITICAL\nFixed Version: 3.0.1, 2.2.9, 1.11.27\nLink: [CVE-2019-19844](https://avd.aquasec.com/nvd/cve-2019-19844)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dir1/Pipfile.lock",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-7471",
          "ruleIndex": 3,
          "level": "error",
          "message": {
            "text": "Package: django\nInstalled Version: 2.0.9\nVulnerability CVE-2020-7471\nSeverity: CRITICAL\nFixed Version: 3.0.3, 2.2.10, 1.11.28\nLink: [CVE-2020-7471](https://avd.aquasec.com/nvd/cve-2020-7471)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dir1/Pipfile.lock",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-6975",
          "ruleIndex": 4,
          "level": "error",
          "message": {
            "text": "Package: django\nInstalled Version: 2.0.9\nVulnerability CVE-2019-6975\nSeverity: HIGH\nFixed Version: 2.0.11\nLink: [CVE-2019-6975](https://avd.aquasec.com/nvd/cve-2019-6975)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dir1/Pipfile.lock",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-9402",
          "ruleIndex": 5,
          "level": "error",
          "message": {
            "text": "Package: django\nInstalled Version: 2.0.9\nVulnerability CVE-2020-9402\nSeverity: HIGH\nFixed Version: 3.0.4, 2.2.11, 1.11.29\nLink: [CVE-2020-9402](https://avd.aquasec.com/nvd/cve-2020-9402)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dir1/Pipfile.lock",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33203",
          "ruleIndex": 6,
          "level": "error",
          "message": {
            "text": "Package: django\nInstalled Version: 2.0.9\nVulnerability CVE-2021-33203\nSeverity: HIGH\nFixed Version: 2.2.24, 3.1.12, 3.2.4\nLink: [CVE-2021-33203](https://avd.aquasec.com/nvd/cve-2021-33203)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dir1/Pipfile.lock",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-44420",
          "ruleIndex": 7,
          "level": "error",
          "message": {
            "text": "Package: django\nInstalled Version: 2.0.9\nVulnerability CVE-2021-44420\nSeverity: HIGH\nFixed Version: 3.2.10, 3.1.14, 2.2.25\nLink: [CVE-2021-44420](https://avd.aquasec.com/nvd/cve-2021-44420)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dir1/Pipfile.lock",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-3498",
          "ruleIndex": 8,
          "level": "warning",
          "message": {
            "text": "Package: django\nInstalled Version: 2.0.9\nVulnerability CVE-2019-3498\nSeverity: MEDIUM\nFixed Version: 2.1.5, 2.0.10, 1.11.18\nLink: [CVE-2019-3498](https://avd.aquasec.com/nvd/cve-2019-3498)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dir1/Pipfile.lock",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-13254",
          "ruleIndex": 9,
          "level": "warning",
          "message": {
            "text": "Package: django\nInstalled Version: 2.0.9\nVulnerability CVE-2020-13254\nSeverity: MEDIUM\nFixed Version: 3.0.7, 2.2.13\nLink: [CVE-2020-13254](https://avd.aquasec.com/nvd/cve-2020-13254)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dir1/Pipfile.lock",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-13596",
          "ruleIndex": 10,
          "level": "warning",
          "message": {
            "text": "Package: django\nInstalled Version: 2.0.9\nVulnerability CVE-2020-13596\nSeverity: MEDIUM\nFixed Version: 3.0.7, 2.2.13\nLink: [CVE-2020-13596](https://avd.aquasec.com/nvd/cve-2020-13596)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dir1/Pipfile.lock",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "pyup.io-37132",
          "ruleIndex": 11,
          "level": "note",
          "message": {
            "text": "Package: django-cors-headers\nInstalled Version: 2.5.2\nVulnerability pyup.io-37132\nSeverity: UNKNOWN\nFixed Version: 3.0.0\nLink: [pyup.io-37132]()"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dir1/Pipfile.lock",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "pyup.io-42216",
          "ruleIndex": 12,
          "level": "note",
          "message": {
            "text": "Package: django-silk\nInstalled Version: 3.0.1\nVulnerability pyup.io-42216\nSeverity: UNKNOWN\nFixed Version: 4.0.0\nLink: [pyup.io-42216]()"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dir1/Pipfile.lock",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-25626",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "Package: djangorestframework\nInstalled Version: 3.9.2\nVulnerability CVE-2020-25626\nSeverity: MEDIUM\nFixed Version: 3.11.2\nLink: [CVE-2020-25626](https://avd.aquasec.com/nvd/cve-2020-25626)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dir1/Pipfile.lock",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "pyup.io-40104",
          "ruleIndex": 14,
          "level": "note",
          "message": {
            "text": "Package: gunicorn\nInstalled Version: 19.9.0\nVulnerability pyup.io-40104\nSeverity: UNKNOWN\nFixed Version: 19.10.0, 20.0.1\nLink: [pyup.io-40104]()"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dir1/Pipfile.lock",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "pyup.io-40105",
          "ruleIndex": 15,
          "level": "note",
          "message": {
            "text": "Package: gunicorn\nInstalled Version: 19.9.0\nVulnerability pyup.io-40105\nSeverity: UNKNOWN\nFixed Version: 19.10.0\nLink: [pyup.io-40105]()"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dir1/Pipfile.lock",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-11078",
          "ruleIndex": 16,
          "level": "note",
          "message": {
            "text": "Package: httplib2\nInstalled Version: 0.12.1\nVulnerability CVE-2020-11078\nSeverity: LOW\nFixed Version: 0.18.0\nLink: [CVE-2020-11078](https://avd.aquasec.com/nvd/cve-2020-11078)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dir1/Pipfile.lock",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-21240",
          "ruleIndex": 17,
          "level": "note",
          "message": {
            "text": "Package: httplib2\nInstalled Version: 0.12.1\nVulnerability CVE-2021-21240\nSeverity: LOW\nFixed Version: 0.19.0\nLink: [CVE-2021-21240](https://avd.aquasec.com/nvd/cve-2021-21240)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dir1/Pipfile.lock",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "pyup.io-38303",
          "ruleIndex": 18,
          "level": "note",
          "message": {
            "text": "Package: httplib2\nInstalled Version: 0.12.1\nVulnerability pyup.io-38303\nSeverity: UNKNOWN\nFixed Version: 0.18.0\nLink: [pyup.io-38303]()"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dir1/Pipfile.lock",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-28493",
          "ruleIndex": 19,
          "level": "warning",
          "message": {
            "text": "Package: jinja2\nInstalled Version: 2.10.1\nVulnerability CVE-2020-28493\nSeverity: MEDIUM\nFixed Version: 2.11.3\nLink: [CVE-2020-28493](https://avd.aquasec.com/nvd/cve-2020-28493)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dir1/Pipfile.lock",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "pyup.io-42497",
          "ruleIndex": 20,
          "level": "note",
          "message": {
            "text": "Package: kombu\nInstalled Version: 4.5.0\nVulnerability pyup.io-42497\nSeverity: UNKNOWN\nFixed Version: 5.2.1\nLink: [pyup.io-42497]()"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dir1/Pipfile.lock",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-29651",
          "ruleIndex": 21,
          "level": "error",
          "message": {
            "text": "Package: py\nInstalled Version: 1.8.0\nVulnerability CVE-2020-29651\nSeverity: HIGH\nFixed Version: \nLink: [CVE-2020-29651](https://avd.aquasec.com/nvd/cve-2020-29651)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dir1/Pipfile.lock",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-20270",
          "ruleIndex": 22,
          "level": "error",
          "message": {
            "text": "Package: pygments\nInstalled Version: 2.3.1\nVulnerability CVE-2021-20270\nSeverity: HIGH\nFixed Version: 2.7.4\nLink: [CVE-2021-20270](https://avd.aquasec.com/nvd/cve-2021-20270)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dir1/Pipfile.lock",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-27291",
          "ruleIndex": 23,
          "level": "warning",
          "message": {
            "text": "Package: pygments\nInstalled Version: 2.3.1\nVulnerability CVE-2021-27291\nSeverity: MEDIUM\nFixed Version: 2.7.4\nLink: [CVE-2021-27291](https://avd.aquasec.com/nvd/cve-2021-27291)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dir1/Pipfile.lock",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-14343",
          "ruleIndex": 24,
          "level": "error",
          "message": {
            "text": "Package: pyyaml\nInstalled Version: 5.1\nVulnerability CVE-2020-14343\nSeverity: CRITICAL\nFixed Version: 5.4\nLink: [CVE-2020-14343](https://avd.aquasec.com/nvd/cve-2020-14343)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dir1/Pipfile.lock",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-20477",
          "ruleIndex": 25,
          "level": "error",
          "message": {
            "text": "Package: pyyaml\nInstalled Version: 5.1\nVulnerability CVE-2019-20477\nSeverity: HIGH\nFixed Version: \nLink: [CVE-2019-20477](https://avd.aquasec.com/nvd/cve-2019-20477)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dir1/Pipfile.lock",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-1747",
          "ruleIndex": 26,
          "level": "error",
          "message": {
            "text": "Package: pyyaml\nInstalled Version: 5.1\nVulnerability CVE-2020-1747\nSeverity: HIGH\nFixed Version: 5.3.1\nLink: [CVE-2020-1747](https://avd.aquasec.com/nvd/cve-2020-1747)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dir1/Pipfile.lock",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-43572",
          "ruleIndex": 27,
          "level": "error",
          "message": {
            "text": "Package: sendgrid\nInstalled Version: 6.0.4\nVulnerability CVE-2021-43572\nSeverity: CRITICAL\nFixed Version: 6.9.1\nLink: [CVE-2021-43572](https://avd.aquasec.com/nvd/cve-2021-43572)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dir1/Pipfile.lock",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-11324",
          "ruleIndex": 28,
          "level": "error",
          "message": {
            "text": "Package: urllib3\nInstalled Version: 1.24.1\nVulnerability CVE-2019-11324\nSeverity: HIGH\nFixed Version: 1.24.2\nLink: [CVE-2019-11324](https://avd.aquasec.com/nvd/cve-2019-11324)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dir1/Pipfile.lock",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33503",
          "ruleIndex": 29,
          "level": "error",
          "message": {
            "text": "Package: urllib3\nInstalled Version: 1.24.1\nVulnerability CVE-2021-33503\nSeverity: HIGH\nFixed Version: 1.26.5\nLink: [CVE-2021-33503](https://avd.aquasec.com/nvd/cve-2021-33503)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dir1/Pipfile.lock",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-11236",
          "ruleIndex": 30,
          "level": "warning",
          "message": {
            "text": "Package: urllib3\nInstalled Version: 1.24.1\nVulnerability CVE-2019-11236\nSeverity: MEDIUM\nFixed Version: \nLink: [CVE-2019-11236](https://avd.aquasec.com/nvd/cve-2019-11236)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dir1/Pipfile.lock",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-26137",
          "ruleIndex": 31,
          "level": "warning",
          "message": {
            "text": "Package: urllib3\nInstalled Version: 1.24.1\nVulnerability CVE-2020-26137\nSeverity: MEDIUM\nFixed Version: 1.25.9\nLink: [CVE-2020-26137](https://avd.aquasec.com/nvd/cve-2020-26137)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dir1/Pipfile.lock",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-42771",
          "ruleIndex": 0,
          "level": "error",
          "message": {
            "text": "Package: babel\nInstalled Version: 2.6.0\nVulnerability CVE-2021-42771\nSeverity: HIGH\nFixed Version: 2.9.1\nLink: [CVE-2021-42771](https://avd.aquasec.com/nvd/cve-2021-42771)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dir2/Pipfile.lock",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "pyup.io-42498",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Package: celery\nInstalled Version: 4.3.0\nVulnerability pyup.io-42498\nSeverity: UNKNOWN\nFixed Version: 5.2.0\nLink: [pyup.io-42498]()"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dir2/Pipfile.lock",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-19844",
          "ruleIndex": 2,
          "level": "error",
          "message": {
            "text": "Package: django\nInstalled Version: 2.0.9\nVulnerability CVE-2019-19844\nSeverity: CRITICAL\nFixed Version: 3.0.1, 2.2.9, 1.11.27\nLink: [CVE-2019-19844](https://avd.aquasec.com/nvd/cve-2019-19844)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dir2/Pipfile.lock",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-7471",
          "ruleIndex": 3,
          "level": "error",
          "message": {
            "text": "Package: django\nInstalled Version: 2.0.9\nVulnerability CVE-2020-7471\nSeverity: CRITICAL\nFixed Version: 3.0.3, 2.2.10, 1.11.28\nLink: [CVE-2020-7471](https://avd.aquasec.com/nvd/cve-2020-7471)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dir2/Pipfile.lock",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-6975",
          "ruleIndex": 4,
          "level": "error",
          "message": {
            "text": "Package: django\nInstalled Version: 2.0.9\nVulnerability CVE-2019-6975\nSeverity: HIGH\nFixed Version: 2.0.11\nLink: [CVE-2019-6975](https://avd.aquasec.com/nvd/cve-2019-6975)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dir2/Pipfile.lock",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-9402",
          "ruleIndex": 5,
          "level": "error",
          "message": {
            "text": "Package: django\nInstalled Version: 2.0.9\nVulnerability CVE-2020-9402\nSeverity: HIGH\nFixed Version: 3.0.4, 2.2.11, 1.11.29\nLink: [CVE-2020-9402](https://avd.aquasec.com/nvd/cve-2020-9402)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dir2/Pipfile.lock",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33203",
          "ruleIndex": 6,
          "level": "error",
          "message": {
            "text": "Package: django\nInstalled Version: 2.0.9\nVulnerability CVE-2021-33203\nSeverity: HIGH\nFixed Version: 2.2.24, 3.1.12, 3.2.4\nLink: [CVE-2021-33203](https://avd.aquasec.com/nvd/cve-2021-33203)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dir2/Pipfile.lock",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-44420",
          "ruleIndex": 7,
          "level": "error",
          "message": {
            "text": "Package: django\nInstalled Version: 2.0.9\nVulnerability CVE-2021-44420\nSeverity: HIGH\nFixed Version: 3.2.10, 3.1.14, 2.2.25\nLink: [CVE-2021-44420](https://avd.aquasec.com/nvd/cve-2021-44420)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dir2/Pipfile.lock",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-3498",
          "ruleIndex": 8,
          "level": "warning",
          "message": {
            "text": "Package: django\nInstalled Version: 2.0.9\nVulnerability CVE-2019-3498\nSeverity: MEDIUM\nFixed Version: 2.1.5, 2.0.10, 1.11.18\nLink: [CVE-2019-3498](https://avd.aquasec.com/nvd/cve-2019-3498)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dir2/Pipfile.lock",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-13254",
          "ruleIndex": 9,
          "level": "warning",
          "message": {
            "text": "Package: django\nInstalled Version: 2.0.9\nVulnerability CVE-2020-13254\nSeverity: MEDIUM\nFixed Version: 3.0.7, 2.2.13\nLink: [CVE-2020-13254](https://avd.aquasec.com/nvd/cve-2020-13254)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dir2/Pipfile.lock",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-13596",
          "ruleIndex": 10,
          "level": "warning",
          "message": {
            "text": "Package: django\nInstalled Version: 2.0.9\nVulnerability CVE-2020-13596\nSeverity: MEDIUM\nFixed Version: 3.0.7, 2.2.13\nLink: [CVE-2020-13596](https://avd.aquasec.com/nvd/cve-2020-13596)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dir2/Pipfile.lock",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "pyup.io-37132",
          "ruleIndex": 11,
          "level": "note",
          "message": {
            "text": "Package: django-cors-headers\nInstalled Version: 2.5.2\nVulnerability pyup.io-37132\nSeverity: UNKNOWN\nFixed Version: 3.0.0\nLink: [pyup.io-37132]()"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dir2/Pipfile.lock",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "pyup.io-42216",
          "ruleIndex": 12,
          "level": "note",
          "message": {
            "text": "Package: django-silk\nInstalled Version: 3.0.1\nVulnerability pyup.io-42216\nSeverity: UNKNOWN\nFixed Version: 4.0.0\nLink: [pyup.io-42216]()"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dir2/Pipfile.lock",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-25626",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "Package: djangorestframework\nInstalled Version: 3.9.2\nVulnerability CVE-2020-25626\nSeverity: MEDIUM\nFixed Version: 3.11.2\nLink: [CVE-2020-25626](https://avd.aquasec.com/nvd/cve-2020-25626)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dir2/Pipfile.lock",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "pyup.io-40104",
          "ruleIndex": 14,
          "level": "note",
          "message": {
            "text": "Package: gunicorn\nInstalled Version: 19.9.0\nVulnerability pyup.io-40104\nSeverity: UNKNOWN\nFixed Version: 19.10.0, 20.0.1\nLink: [pyup.io-40104]()"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dir2/Pipfile.lock",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "pyup.io-40105",
          "ruleIndex": 15,
          "level": "note",
          "message": {
            "text": "Package: gunicorn\nInstalled Version: 19.9.0\nVulnerability pyup.io-40105\nSeverity: UNKNOWN\nFixed Version: 19.10.0\nLink: [pyup.io-40105]()"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dir2/Pipfile.lock",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-11078",
          "ruleIndex": 16,
          "level": "note",
          "message": {
            "text": "Package: httplib2\nInstalled Version: 0.12.1\nVulnerability CVE-2020-11078\nSeverity: LOW\nFixed Version: 0.18.0\nLink: [CVE-2020-11078](https://avd.aquasec.com/nvd/cve-2020-11078)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dir2/Pipfile.lock",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-21240",
          "ruleIndex": 17,
          "level": "note",
          "message": {
            "text": "Package: httplib2\nInstalled Version: 0.12.1\nVulnerability CVE-2021-21240\nSeverity: LOW\nFixed Version: 0.19.0\nLink: [CVE-2021-21240](https://avd.aquasec.com/nvd/cve-2021-21240)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dir2/Pipfile.lock",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "pyup.io-38303",
          "ruleIndex": 18,
          "level": "note",
          "message": {
            "text": "Package: httplib2\nInstalled Version: 0.12.1\nVulnerability pyup.io-38303\nSeverity: UNKNOWN\nFixed Version: 0.18.0\nLink: [pyup.io-38303]()"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dir2/Pipfile.lock",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-28493",
          "ruleIndex": 19,
          "level": "warning",
          "message": {
            "text": "Package: jinja2\nInstalled Version: 2.10.1\nVulnerability CVE-2020-28493\nSeverity: MEDIUM\nFixed Version: 2.11.3\nLink: [CVE-2020-28493](https://avd.aquasec.com/nvd/cve-2020-28493)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dir2/Pipfile.lock",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "pyup.io-42497",
          "ruleIndex": 20,
          "level": "note",
          "message": {
            "text": "Package: kombu\nInstalled Version: 4.5.0\nVulnerability pyup.io-42497\nSeverity: UNKNOWN\nFixed Version: 5.2.1\nLink: [pyup.io-42497]()"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dir2/Pipfile.lock",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-29651",
          "ruleIndex": 21,
          "level": "error",
          "message": {
            "text": "Package: py\nInstalled Version: 1.8.0\nVulnerability CVE-2020-29651\nSeverity: HIGH\nFixed Version: \nLink: [CVE-2020-29651](https://avd.aquasec.com/nvd/cve-2020-29651)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dir2/Pipfile.lock",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-20270",
          "ruleIndex": 22,
          "level": "error",
          "message": {
            "text": "Package: pygments\nInstalled Version: 2.3.1\nVulnerability CVE-2021-20270\nSeverity: HIGH\nFixed Version: 2.7.4\nLink: [CVE-2021-20270](https://avd.aquasec.com/nvd/cve-2021-20270)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dir2/Pipfile.lock",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-27291",
          "ruleIndex": 23,
          "level": "warning",
          "message": {
            "text": "Package: pygments\nInstalled Version: 2.3.1\nVulnerability CVE-2021-27291\nSeverity: MEDIUM\nFixed Version: 2.7.4\nLink: [CVE-2021-27291](https://avd.aquasec.com/nvd/cve-2021-27291)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dir2/Pipfile.lock",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-14343",
          "ruleIndex": 24,
          "level": "error",
          "message": {
            "text": "Package: pyyaml\nInstalled Version: 5.1\nVulnerability CVE-2020-14343\nSeverity: CRITICAL\nFixed Version: 5.4\nLink: [CVE-2020-14343](https://avd.aquasec.com/nvd/cve-2020-14343)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dir2/Pipfile.lock",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-20477",
          "ruleIndex": 25,
          "level": "error",
          "message": {
            "text": "Package: pyyaml\nInstalled Version: 5.1\nVulnerability CVE-2019-20477\nSeverity: HIGH\nFixed Version: \nLink: [CVE-2019-20477](https://avd.aquasec.com/nvd/cve-2019-20477)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dir2/Pipfile.lock",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-1747",
          "ruleIndex": 26,
          "level": "error",
          "message": {
            "text": "Package: pyyaml\nInstalled Version: 5.1\nVulnerability CVE-2020-1747\nSeverity: HIGH\nFixed Version: 5.3.1\nLink: [CVE-2020-1747](https://avd.aquasec.com/nvd/cve-2020-1747)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dir2/Pipfile.lock",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-43572",
          "ruleIndex": 27,
          "level": "error",
          "message": {
            "text": "Package: sendgrid\nInstalled Version: 6.0.4\nVulnerability CVE-2021-43572\nSeverity: CRITICAL\nFixed Version: 6.9.1\nLink: [CVE-2021-43572](https://avd.aquasec.com/nvd/cve-2021-43572)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dir2/Pipfile.lock",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-11324",
          "ruleIndex": 28,
          "level": "error",
          "message": {
            "text": "Package: urllib3\nInstalled Version: 1.24.1\nVulnerability CVE-2019-11324\nSeverity: HIGH\nFixed Version: 1.24.2\nLink: [CVE-2019-11324](https://avd.aquasec.com/nvd/cve-2019-11324)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dir2/Pipfile.lock",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33503",
          "ruleIndex": 29,
          "level": "error",
          "message": {
            "text": "Package: urllib3\nInstalled Version: 1.24.1\nVulnerability CVE-2021-33503\nSeverity: HIGH\nFixed Version: 1.26.5\nLink: [CVE-2021-33503](https://avd.aquasec.com/nvd/cve-2021-33503)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dir2/Pipfile.lock",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-11236",
          "ruleIndex": 30,
          "level": "warning",
          "message": {
            "text": "Package: urllib3\nInstalled Version: 1.24.1\nVulnerability CVE-2019-11236\nSeverity: MEDIUM\nFixed Version: \nLink: [CVE-2019-11236](https://avd.aquasec.com/nvd/cve-2019-11236)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dir2/Pipfile.lock",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-26137",
          "ruleIndex": 31,
          "level": "warning",
          "message": {
            "text": "Package: urllib3\nInstalled Version: 1.24.1\nVulnerability CVE-2020-26137\nSeverity: MEDIUM\nFixed Version: 1.25.9\nLink: [CVE-2020-26137](https://avd.aquasec.com/nvd/cve-2020-26137)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dir2/Pipfile.lock",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        }
      ],
      "columnKind": "utf16CodeUnits",
      "originalUriBaseIds": {
        "ROOTPATH": {
          "uri": "file:///"
        }
      }
    }
  ]
}